{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/form/formUtiil.tsx","system/utils/treeUtil.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/validateUtil.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/factory/detail/factDetArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/factDetArgumentItem.tsx","system/contents/create/factory/detail/factDetInheritMng.tsx","system/contents/create/factory/detail/factDetOriginMng.tsx","system/contents/create/factory/dialog/logicTemplateDialog.tsx","system/contents/create/factory/detail/factOprParam.tsx","system/contents/create/factory/detail/factDetLogicItem.tsx","system/contents/create/factory/detail/factDetBehiviorMng.tsx","system/contents/create/factory/detail/factDetVisualMng.tsx","system/contents/create/factory/detail/factDetInheritConnMng.tsx","system/contents/create/factory/detail/factDetInheritConnector.tsx","system/contents/create/factory/detail/factDetSendManager.tsx","system/contents/create/factory/detail/factDetFieldMng.tsx","system/contents/create/factory/detail/factDetExtendMng.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/launcher/launcherTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","initialStore","system","isSplash","user","dialog","SystemConst","GloballDialog","useContext","GlobalContext","store","setStore","_Blind","onClick","styled","div","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","ChannelPane","props","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","index","name","icon","isActive","isEnable","selectTab","undefined","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","FormUtil","checkables","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","isVisible","textAlign","isCenter","marginTop","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","width","placeholder","onChange","e","target","readOnly","isReadOnly","jsx","labelWidth","isNumber","concat","_ItemnInput","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","i","_Option","disabled","isDisabled","buttons","button","_Button","callback","label","_Message","message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","height","_InfoDiv","color","textRecords","text","isRelation","isUse","_Switch","_Record","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","tempNode","find","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ConfirmDialog","_Frame","_Main","_Inner","split","msg","Message","ButtonRecord","str","min","max","checkIncludesChars","ch","charAt","indexOf","isNaN","conditions","ValidateUtil","createURL","draw","canvas","document","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radiusBase","radius","self","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","VisualParamType","BehaviorParamType","Object","values","SelfParamType","ExtendParamType","EffectParamType","ModulateParamType","ConstantType","ParamUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","rootData","sends","createParticleRec","cur","valueMapList","ConstantValueMap","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","Vector","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","extendList","connectMng","connects","connect","connector","disable","logicItem","connectType","wrap","inheritMng","defs","def","searchDependLogic","depend","addValueMap","FRAME","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","iterateValueMap","LOOP_ITERATE","sendValueMapList","Instance","decayLimit","DECAY_LIMIT","decayRate","DECAY_RATE","gravity","GRAVITY_VAL","modulate","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","Function","convertFormulaToBoolean","PreviewUtil","LogicPreviewFrame","ref","useRef","formList","setFormList","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","setTimeout","argMapList","argWrap","args","arg","argItem","defVal","key","getMapList","formListJsx","form","FormRecord","TextField","checkRequired","buildOriginProps","par","splice","isInputOK","buildTabJsx","_FormDiv","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","current","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","onKeyDown","img","wrapElement","insertChild","listPos","listName","getListName","newNode","createNode","size","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","originMng","root","nameList","logic","curLogicOwner","VisualParams","BehaviorParams","SelfParams","ExtendParams","EffectParams","ModulateParams","Constants","argMng","mng","LogicElementUtil","FactDetArgumentMng","FactoryTreeContext","setFocusNode","BorderPanel","addChild","ModifyOperations","isModify","setModify","removeSelf","isComplete","isCompleteCheck","checkableFields","mappingForm","firstRegist","modifyRegist","ListName","FactDetArgumentItem","setName","defaultValue","setDefaultValue","argType","setArgType","isOrigin","paramNameList","getParamNameList","valueType","Component","checkStringLength","LogicUtil","checkFieldName","filter","includes","Combobox","ArgTypes","checkNumber","FactDetInheritMng","itemWrap","FactDetOriginMng","LogicTemplateDialog","setParam","paramName","Level","FactDetLogicItem","el","parentType","isConnect","hasArgNode","hasFieldNode","hasConnectNode","logicNameList","getLogicNameList","toggleElement","hasNode","removeChild","getDefaultLogicMngs","Record","Switch","LIST_NAME","FactOprParam","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","CONNECT_EXTEND","CONNECT_SEND","argumentList","fieldKeys","getLogicNode","filedMng","fieldName","fieldKeyList","num","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","span","FactDetBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","exchangeElements","toggleElements","paramElements","GRAVITY_LIMIT","FactDetVisualMng","isBlankMethod","hasDisappearParam","hasShrinkParam","FactDetInheritConnMng","FactDetInheritConnector","memo","setMemo","setConnectType","setDepend","connectorNum","isCreate","inheritList","setSendParams","sendIndex","sendMng","sendNode","dependItem","getSendParamList","paramWrap","createParamWrap","initConnectorNode","inheritNode","isChange","ConnectTypes","checkAsciiChars","dependLogic","inherit","newWrap","parse","getChildrenElementNode","FactDetSendManager","sendParamList","targetWrap","curSize","curParamList","FactDetFieldMng","FactDetExtendMng","hasLoopParam","hasInvokeParam","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Span","_Field","_Signature","_Detail","nameJsx","_ValueType","wrapNode","console","log","get","elementNode","getChildrenDataNode","createContext","LogicMainteTab","getInitialData","setRootData","setInvalidate","fileHandle","setFileHandle","originNode","getOrigin","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeHeadHalf","plainData","createWritable","writable","gZip","write","close","getFile","showSaveFilePicker","types","accept","then","handle","catch","showOpenFilePicker","file","fileContents","unZip","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","_DetailMainDiv","getDetailComponent","ManageTab","LauncherTab","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","resList","ReleaseNote","setJsx","record","note","_Header","version","_ListFrame","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","TotalHeader","setUserId","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","isEntry","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","App","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2ebb0b8.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('licresia-demo-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('licresia-demo', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string}[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string}[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;","import StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: false,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            // store.system.dialog = null;\r\n            // setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        let value = props.checkable.value;\r\n        // if (type === 'number' && value === '') value = '0';\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    let value = e.target.value;\r\n                    // if (type === 'number' && value === '') value = '0';\r\n                    props.checkable.value = type !== 'number' ? value : Number(value).toString();\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'right'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={props.isCenter ?? false}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(350, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = '55pt Arial';\r\n            ctx.fillStyle = '#db0000';\r\n            ctx.fillText('L', 30, 70);\r\n            const adjust = ctx.measureText('L').width;\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('iCreSia', 30 + adjust, 70);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: '#ffffffe4' });\r\n            rgba.a = 40;\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba(rgba) })\r\n            rgba.a = 1;\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba(rgba) })\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\r\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\r\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\r\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import { assert } from \"console\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildOriginProps = (\r\n        owner: Particle.Instance[],\r\n        node: TreeUtil.ElementNode,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).inheritMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('connect-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeInheritConnectManager).connects;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.connectType === 'create' ?\r\n                        searchElement('inherit-cache-item', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList);\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n                                // console.log(self.frame);\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            // モデュレート（動きの変化）を付与\r\n            const decayLimit = getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT);\r\n            const decayRate = getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE);\r\n            const gravity = getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL);\r\n            if (decayLimit != undefined) {\r\n                extendList.push((self: Particle.Instance) => {\r\n                    modulate(self, {\r\n                        decayLimit, decayRate: decayRate as number, gravity: gravity as number\r\n                    });\r\n                });\r\n            }\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n            // エフェクトお付与\r\n            let disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            let shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        const origin = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: 'screen_width', value: SCREEN_WIDTH },\r\n        { name: 'screen_height', value: SCREEN_HEIGHT },\r\n        { name: 'pi', value: 3.14159265359 },\r\n        { name: 'radian_round', value: 3.14159265359 * 2 }\r\n    ];\r\n\r\n    type ModulateParam = {\r\n        decayRate: number;\r\n        decayLimit: number;\r\n        gravity: number;\r\n    }\r\n\r\n    const modulate = (self: Particle.Instance, param: ModulateParam) => {\r\n\r\n        if (self.vec.len > param.decayLimit) {\r\n            self.vec.len = self.vec.len * param.decayRate;\r\n            self.vec.syncFromRad();\r\n            self.vec.xy.y += param.gravity;\r\n            self.vec.syncFromXY();\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport PreviewUtil from \"./previewUtil\";\r\n\r\nnamespace LogicPreviewFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        rootData: LogicUtil.WrapElement;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        const getMapList = (): { key: string, value: string }[] => {\r\n            const argWrap = (props.node.children[0].data as LogicUtil.WrapElement);\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                    let value: string = '';\r\n                    if (argItem.defVal != undefined) value = argItem.defVal.toString();\r\n                    return { key: argItem.name, value };\r\n                });\r\n            }\r\n            return [];\r\n        }\r\n\r\n        const argMapList = useMemo(() => {\r\n            return getMapList();\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            setFormList(argMapList.map(arg => {\r\n                return { value: arg.value, errors: [] };\r\n            }));\r\n        }, []);\r\n\r\n        const formListJsx = useMemo(() => {\r\n            return formList.map((form, i) => {\r\n                return (\r\n                    <FormUtil.FormRecord\r\n                        key={i}\r\n                        titleLabel={argMapList.map(arg => arg.key)[i]}\r\n                        labelWidth={250}\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={332}\r\n                                isNumber\r\n                                checkable={form}\r\n                                setCheckable={(checkable) => {\r\n                                    form = { ...checkable };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />);\r\n            });\r\n        }, [formList]);\r\n\r\n\r\n        const build = () => {\r\n\r\n            setBuild(true);\r\n\r\n            const sceens: string[] = [];\r\n\r\n            const owner: Particle.Instance[] = [];\r\n\r\n            let frameCnt = 0;\r\n            do {\r\n                if (frameCnt === 0) {\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildOriginProps(owner, props.node, props.rootData, formList.map((form, i) => {\r\n                            return { name: argMapList.map(arg => arg.key)[i], value: Number(form.value) }\r\n                        }))\r\n                    ));\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    ctx.font = '16pt Arial';\r\n                    ctx.fillStyle = '#ffffff';\r\n                    ctx.fillText(`${frameCnt}`, 6, 24);\r\n                    ctx.fillStyle = '#ffec5c';\r\n                    ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n\r\n                    ctx.save();\r\n                }));\r\n\r\n                // パーティクルの更新\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n\r\n                    particle.update();\r\n                }\r\n\r\n                // 死滅したパーティクルの削除\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n                    if (!particle.isLive) {\r\n                        owner.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if (frameCnt > 500 || owner.length > 3000) break;\r\n                frameCnt++;\r\n            } while (owner.length > 0);\r\n            setFrameCnt(frameCnt);\r\n            setSceens(sceens);\r\n\r\n            setBuild(false);\r\n            setTabIndex(1);\r\n        }\r\n\r\n\r\n        const isInputOK = () => {\r\n            return formList.find(form => form.errors.length > 0) == undefined;\r\n        }\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_FormDiv>\r\n                    {formListJsx}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK() && !isBuild,\r\n                            callback: () => {\r\n                                build();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame width={width} height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK() && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogicPreviewFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #a2c1d5df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const getListName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'origin-mng':\r\n            case 'inherit-mng': return 'defs';\r\n            case 'origin-item':\r\n            case 'connector':\r\n            case 'inherit-cache-item':\r\n            case 'inherit-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'connect-mng': return 'connects';\r\n            case 'argument-mng': return 'args';\r\n            case 'field-mng': return 'fields';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                originMng: {\r\n                    type: 'origin-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement,\r\n                inheritMng: {\r\n                    type: 'inherit-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    export const getLogicNameList = (root: LogicUtil.NodeRoot) => {\r\n        const nameList: string[] = [];\r\n        // Originのロジック名を取得\r\n        (root.originMng.data as LogicUtil.NodeLogicManager).defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        // Inheritのロジック名を取得\r\n        (root.inheritMng.data as LogicUtil.NodeLogicManager).defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\n\r\nconst FactDetArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        listName: string;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                // const parent = (node.parent as TreeUtil.ElementNode);\r\n                                // parent.children.splice(parent.children.length - 1, 1);\r\n                                // setFocusNode(parent);\r\n                                // const list = ((parent.data as FactoryUtil.WrapNode).data[props.listName] as FactoryUtil.WrapNode[]);\r\n                                // list.splice(parent.children.length - 1, 1);\r\n                                removeSelf(props.listName);\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst ListName = 'args';\r\nconst FactDetArgumentItem = () => {\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [defaultValue, setDefaultValue] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isOrigin, reservedList] = useMemo(() => {\r\n        const type = (node.parent?.parent?.data as LogicUtil.WrapElement).type;\r\n        const isOrigin = type === 'origin-item';\r\n\r\n        const reservedList: string[] = [];\r\n        return [isOrigin, reservedList];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n        if (isOrigin && param.defVal != undefined) {\r\n            setDefaultValue({ ...defaultValue, value: param.defVal.toString() });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            listName={ListName}\r\n            checkableFields={isOrigin ? [name, argType, defaultValue] : [name, argType]}\r\n            firstRegist={() => {\r\n                let defVal = undefined;\r\n                if (isOrigin && defaultValue.value != '') {\r\n                    defVal = Number(defaultValue.value);\r\n                }\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType,\r\n                    defVal\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                param.defVal = undefined;\r\n                if (isOrigin && defaultValue.value != '') {\r\n                    param.defVal = Number(defaultValue.value);\r\n                }\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isVisible={isOrigin}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defaultValue}\r\n                            setCheckable={setDefaultValue}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumber(value),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf(ListName);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\n\r\nconst FactDetInheritMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'inherit-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeLogicManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\n\r\nconst FactDetOriginMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Origin',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'origin-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetOriginMng;","import styled from \"styled-components\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\n\r\nnamespace LogicTemplateDialog {\r\n\r\n    export const Component = (props: {\r\n        mngs: LogicUtil.WrapElement[];\r\n        callback: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const width = 600;\r\n        const height = 150;\r\n        const message = 'Please, select logic template!';\r\n\r\n        const setParam = (params: LogicUtil.NodeParamItem[], paramName: string,\r\n            formulaItems: string[], values: LogicUtil.ParamProps[]\r\n        ) => {\r\n            const param = params.find(param => param.name === paramName);\r\n            if (param != undefined) {\r\n                param.formulaItems = formulaItems;\r\n                param.values = values;\r\n            }\r\n        }\r\n\r\n        const visualParams = (props.mngs[0].data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n        const behaviorParams = (props.mngs[1].data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n        const buttons = [\r\n            {\r\n                label: 'Default',\r\n                callback: () => {\r\n                    props.callback();\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Shoot up',\r\n                callback: () => {\r\n                    setParam(behaviorParams, ParamUtil.BehaviorParamType.POS_X,\r\n                        ['var', '/', 'var'],\r\n                        [\r\n                            { type: 'constant', value: ParamUtil.ConstantType.SCREEN_WIDTH },\r\n                            { type: 'direct', value: '2' }\r\n                        ]\r\n                    );\r\n                    setParam(behaviorParams, ParamUtil.BehaviorParamType.POS_Y,\r\n                        ['var', '+', 'var'],\r\n                        [\r\n                            { type: 'constant', value: ParamUtil.ConstantType.SCREEN_HEIGHT },\r\n                            { type: 'direct', value: '20' }\r\n                        ]\r\n                    );\r\n                    setParam(behaviorParams, ParamUtil.BehaviorParamType.VEC_Y,\r\n                        ['var'],\r\n                        [\r\n                            { type: 'direct', value: '-10' }\r\n                        ]\r\n                    );\r\n\r\n                    props.callback();\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogicTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    CONNECT_EXTEND,\r\n    CONNECT_SEND\r\n}\r\n\r\n/**\r\n * フィールドの親プロパティ\r\n * フィールドのみ追加・削除可能\r\n */\r\nconst LIST_NAME = 'fields';\r\n\r\nconst FactOprParam = () => {\r\n    const { removeSelf, node, setFocusNode, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'extend-mng': return Level.CONNECT_EXTEND;\r\n            case 'send-mng': return Level.CONNECT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        if (level >= Level.CONNECT_EXTEND) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n            if (level === Level.CONNECT_SEND) {\r\n                const extendElement = (node.parent?.parent?.children[0].data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        const fieldNeedTypes: LogicUtil.NodeType[] = ['behavior-mng', 'visual-mng', 'send-mng', 'extend-mng'];\r\n        if (fieldNeedTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            const filedMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (filedMng != undefined) {\r\n                (filedMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n            if (logicItem.mngs[0].type === 'argument-mng') {\r\n                argumentList = (logicItem.mngs[0].data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n    \r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    // /** 引数リスト */\r\n    // const argumentList = useMemo(() => {\r\n    //     const parentType = (node.parent?.data as FactoryUtil.WrapElement).type;\r\n    //     const getTargetWrap = () => {\r\n    //         switch (parentType) {\r\n    //             case 'field-mng':\r\n    //             case 'visual-mng':\r\n    //             case 'behavior-mng': {\r\n    //                 return node.parent?.children[0].data as FactoryUtil.WrapElement;\r\n    //             }\r\n    //             case 'extend-mng':\r\n    //             case 'send-mng': {\r\n    //                 return node.parent?.parent?.parent?.parent?.children[0].data as FactoryUtil.WrapElement;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     const targetWrap = getTargetWrap();\r\n    //     if (targetWrap == undefined || targetWrap.type !== 'argument-mng') return [];\r\n\r\n    //     // console.log((targetWrap.data as FactoryUtil.NodeArgumentManager).args);\r\n    //     return (targetWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n    //         const item = arg.data as FactoryUtil.NodeArgumentItem;\r\n    //         return item.name;\r\n    //     });\r\n    // }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.CONNECT_EXTEND;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            listName={LIST_NAME}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        isCenter\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '>'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'var',\r\n                            width: 70,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('var');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'rand',\r\n                            width: 80,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('rand(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'integer',\r\n                            width: 80,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('integer(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf(LIST_NAME);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactOprParam;\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nconst ListName = 'defs';\r\nconst FactDetLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, isInherit, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            parentType !== 'origin-mng',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('connect-mng'),\r\n        ]\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const logicNameList = useMemo(() => {\r\n        if(wrap.type === 'inherit-cache-item') return [];\r\n        const root = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getLogicNameList(root);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                listName={ListName}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    store.system.dialog = <LogicTemplateDialog.Component\r\n                        mngs={element.mngs}\r\n                        callback={() => {\r\n                            element.mngs.forEach(mng => {\r\n                                const newNode = TreeUtil.createNode(mng, node);\r\n                                const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                                (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                                });\r\n                                node.children.push(newNode);\r\n                            });\r\n                            invalidate();\r\n                        }} />;\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = logicNameList.filter(name => {\r\n                                                // 自分自身のロジック名を除外\r\n                                                if (wrap.data != null) {\r\n                                                    return (wrap.data as LogicUtil.NodeLogicItem).name !== name;\r\n                                                }\r\n                                                return true;\r\n                                            });\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Connect'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'connect-mng',\r\n                                        data: {\r\n                                            connects: []\r\n                                        } as LogicUtil.NodeInheritConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    <FormUtil.ButtonRecord\r\n                        isCenter\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    removeSelf(ListName);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default FactDetLogicItem;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\n\r\nconst FactDetBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isBlankMethod, hasDisappearParam, hasShrinkParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.length === 0,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Blank Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isBlankMethod}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isBlankMethod}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && !isBlankMethod}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\n\r\nconst FactDetInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Connector',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.connects.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst ListName = 'connects';\r\nconst FactDetInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify, removeSelf } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [memo, setMemo] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [connectType, setConnectType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMemo({ ...memo, value: param.memo });\r\n        setConnectType({ ...connectType, value: param.connectType });\r\n        setDepend({ ...depend, value: param.depend });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // コネクト要素の数を算出\r\n            const connectorNum = node.parent?.children.length;\r\n            setMemo({...memo, value: `connector${connectorNum}`});\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = connectType.value === 'create';\r\n\r\n    const inheritList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.inheritMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as LogicUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as LogicUtil.NodeLogicItem).name === depend.value;\r\n            });\r\n            if (dependItem != undefined) {\r\n                const argWrap = (dependItem.data as LogicUtil.NodeLogicItem).mngs[0];\r\n                if (argWrap.type === 'argument-mng') {\r\n                    return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                        return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const setSendParams = (param: LogicUtil.NodeInheritConnector) => {\r\n\r\n        const sendIndex = param.mngs[0].type === 'send-mng' ? 0 : 1;\r\n        const sendMng = param.mngs[sendIndex].data as LogicUtil.NodeParamManager;\r\n        const sendNode = node.children[sendIndex];\r\n        sendMng.params = [];\r\n        sendNode.children = [];\r\n        getSendParamList().forEach(param => {\r\n            const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n            );\r\n            sendMng.params.push(paramWrap);\r\n            sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n        });\r\n    }\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-cache-item',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeConnectInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-cache-item': {\r\n                    (data.data as LogicUtil.NodeConnectInheritItem).mngs.forEach(mng => {\r\n                        const inheritNode = TreeUtil.createNode(mng, newNode);\r\n                        newNode.children.push(inheritNode);\r\n\r\n                        switch (mng.type) {\r\n                            case 'visual-mng': {\r\n                                (mng.data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                            case 'behavior-mng': {\r\n                                (mng.data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                        }\r\n                    });\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n        setSendParams(param);\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            listName={ListName}\r\n            checkableFields={[memo, connectType, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    connectType: connectType.value as LogicUtil.ConnectType,\r\n                    depend: depend.value,\r\n                    memo: memo.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.connectType !== connectType.value || param.depend !== depend.value;\r\n                param.connectType = connectType.value as LogicUtil.ConnectType;\r\n                param.depend = depend.value;\r\n                param.memo = memo.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Inherit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={connectType}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setConnectType(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={connectType.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={inheritList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[connectType]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return connectType.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Memo\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={memo}\r\n                            width={258}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setMemo}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone in',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const inheritMng = (rootData.data as LogicUtil.NodeRoot).inheritMng.data as LogicUtil.NodeLogicManager;\r\n                                                const inheritList = inheritMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                const dependLogic = inheritList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeConnectInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-cache-item',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    (wrap.data as LogicUtil.NodeInheritConnector).mngs.push(newWrap);\r\n                                                    const newNode = TreeUtil.createNode(newWrap, node)\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.connectType = 'create';\r\n                                                    param.depend = '';\r\n                                                    node.children.push(newNode);\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone out',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const inheritMng = (rootData.data as LogicUtil.NodeRoot).inheritMng.data as LogicUtil.NodeLogicManager;\r\n                                                const inheritList = inheritMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                const dependLogic = inheritList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeConnectInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-cache-item',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    (wrap.data as LogicUtil.NodeInheritConnector).mngs.push(newWrap);\r\n                                                    const newNode = TreeUtil.createNode(newWrap, node)\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.connectType = 'create';\r\n                                                    param.depend = '';\r\n                                                    node.children.push(newNode);\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf(ListName);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnector;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\n\r\nconst FactDetSendManager = () => {\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const isCreate = connector.connectType === 'create';\r\n        let targetWrap: LogicUtil.WrapElement | null = null;\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as LogicUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n            });\r\n            if (dependItem != undefined) targetWrap = dependItem;\r\n        } else {\r\n            targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n        }\r\n        if (targetWrap != null) {\r\n            const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const update = () => {\r\n        const sendParamList = getSendParamList();\r\n        const curSize = node.children.length;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 不要なパラメータを削除\r\n        for (let i = curSize - 1; i >= 0; i--) {\r\n            const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n            if (!sendParamList.includes(name)) {\r\n                node.children.splice(i, 1);\r\n                params.splice(i, 1);\r\n            }\r\n        }\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                node.children.push(TreeUtil.createNode(paramWrap, node));\r\n            }\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Update Params',\r\n                        callback: () => {\r\n                            update();\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\n\r\nconst FactDetFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../logicMainteTab\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\n\r\nconst FactDetExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetExtendMng;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport Common from \"../../common\";\r\nimport FactDetArgumentMng from \"../detail/factDetArgumentMng\";\r\nimport FactDetArgumentItem from \"../detail/factDetArgumentItem\";\r\nimport FactDetInheritMng from \"../detail/factDetInheritMng\";\r\nimport FactDetOriginMng from \"../detail/factDetOriginMng\";\r\nimport FactDetLogicItem from \"../detail/factDetLogicItem\";\r\nimport FactOprParam from \"../detail/factOprParam\";\r\nimport FactDetBehiviorMng from \"../detail/factDetBehiviorMng\";\r\nimport FactDetVisualMng from \"../detail/factDetVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport FactDetInheritConnMng from \"../detail/factDetInheritConnMng\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FactDetEffectMng from \"../detail/factDetEffectMng\";\r\nimport FactDetInheritConnector from \"../detail/factDetInheritConnector\";\r\nimport FactDetSendManager from \"../detail/factDetSendManager\";\r\nimport FactDetFieldMng from \"../detail/factDetFieldMng\";\r\nimport FactDetExtendMng from \"../detail/factDetExtendMng\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        removeSelf: (listName: string) => void;\r\n        // treeDisable: boolean;\r\n        // setTreeDisable: (treeDisable: boolean) => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1)) && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'origin-mng' |\r\n        'inherit-mng' |\r\n        'origin-item' |\r\n        'inherit-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connect-mng' |\r\n        'connector' |\r\n        'inherit-cache-item' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['int', 'float', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        originMng: WrapElement;\r\n        inheritMng: WrapElement;\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeConnectInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n        defVal?: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n\r\n    export type NodeExtendManager = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritConnectManager = {\r\n        connects: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        connectType: ConnectType;\r\n        depend: string;\r\n        memo: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Logic</_Category>;\r\n            }\r\n            case 'origin-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Origin Manager</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Inherit Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'origin-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Origin</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Inherit</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-cache-item': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Inherit</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'connect-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Connect Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.memo}&nbsp;<_Span color=\"#ffe89ba6\">{data.connectType}</_Span></span>;\r\n                    if (data.connectType === 'depend') {\r\n                        detailJsx = <span>{data.memo}&nbsp;<_Span color=\"#ffe89ba6\">{data.connectType}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Connector</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'origin-mng': return 'Origin Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'origin-item': return 'Origin Item';\r\n            case 'inherit-item': return 'Inherit Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'connect-mng': return 'Inherit Connect Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-cache-item': return 'Inherit Cache Item';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'origin-mng': return <FactDetOriginMng />;\r\n            case 'inherit-mng': return <FactDetInheritMng />;\r\n            case 'origin-item': return <FactDetLogicItem />;\r\n            case 'inherit-item': return <FactDetLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <FactDetArgumentItem />;\r\n            case 'field-mng': return <FactDetFieldMng />;\r\n            case 'visual-mng': return <FactDetVisualMng />;\r\n            // case 'extend-mng': return <FactDetExtendMngBak />;\r\n            case 'extend-mng': return <FactDetExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'connect-mng': return <FactDetInheritConnMng />;\r\n            case 'connector': return <FactDetInheritConnector />;\r\n            case 'inherit-cache-item': return <FactDetLogicItem />;\r\n            case 'send-mng': return <FactDetSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item': return <FactOprParam />;\r\n        }\r\n    }\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type ConnectType = typeof ConnectTypes[number];\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        console.log(wrapNode.type);\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'origin-mng':\r\n            case 'inherit-mng': return get('defs');\r\n            case 'origin-item':\r\n            case 'connector':\r\n            case 'inherit-cache-item':\r\n            case 'inherit-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'connect-mng': return get('connects');\r\n            case 'argument-mng': return get('args');\r\n            case 'field-mng': return get('fields');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.originMng, children: getChildrenDataNode(node.originMng) },\r\n                    { data: node.inheritMng, children: getChildrenDataNode(node.inheritMng) }\r\n                ];\r\n            }\r\n            case 'origin-mng':\r\n            case 'inherit-mng': return get('defs');\r\n            case 'origin-item':\r\n            case 'connector':\r\n            case 'inherit-cache-item':\r\n            case 'inherit-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'connect-mng': return get('connects');\r\n            case 'argument-mng': return get('args');\r\n            case 'field-mng': return get('fields');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport LogicPreviewFrame from \"../preview/logicPreviewFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const [fileHandle, setFileHandle] = useState<FileSystemFileHandle | null>(null);\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n\r\n    const loadFile = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            setFileHandle(fileHandle);\r\n            const text = DataUtil.unZip(fileContents);\r\n            console.log(text);\r\n            setRootData(JSON.parse(text));\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    const saveFile = () => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                setFileHandle(fileHandle);\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 操作中のOrigin要素の取得する\r\n     * Originの下でなかった場合はnullを返す\r\n     */\r\n    const getOrigin = () => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            if ((cur.data as LogicUtil.WrapElement).type === 'origin-item') return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }\r\n    const originNode = getOrigin();\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        store.system.dialog = (\r\n            <LogicPreviewFrame.Component\r\n                node={originNode as TreeUtil.ElementNode}\r\n                rootData={rootData}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if(i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (originNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <_TreeHeadHalf>\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Preview',\r\n                                    isEnable: originNode != null,\r\n                                    callback: openPreviewDialog\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </_TreeHeadHalf>\r\n                    <_TreeHeadHalf>\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Save',\r\n                                    callback: saveFile\r\n                                },\r\n                                {\r\n                                    label: 'Load',\r\n                                    callback: loadFile\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </_TreeHeadHalf>\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: (listName: string) => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const list = ((node.parent?.data as LogicUtil.WrapElement).data[listName] as LogicUtil.WrapElement[]);\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                        // setTreeDisable\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","\r\nconst ManageTab = () => {\r\n\r\n    return (<></>);\r\n}\r\n\r\nexport default ManageTab;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport TimelineUtil from \"./timelineUtil\";\r\n\r\nconst LauncherTab = () => {\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    {/* <HierarchyNavi cur={focusNode}/> */}\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n            </_PropsDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LauncherTab;\r\n\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport LauncherTab from \"./launcher/launcherTab\";\r\nimport Timeline from \"./launcher/launcherTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: false, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: true, cont: <LauncherTab /> },\r\n                    { name: 'Logic', enable: true, cont: <LogicMainteTab /> }\r\n                ]}\r\n                activeNo={2}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n    //     store.scoreState.focusIndex = 2;\r\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\r\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\r\n    //     // dispatcher.score.setScoreTabIndex(1);\r\n    //     dispatcher.score.setScoreData(data);\r\n    //     // キャッシュの更新\r\n    //     store.scoreData = data;\r\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    //     store.systemState.mainChannelIndex = 5;\r\n    //     store.systemState.scoreTabIndex = 0;\r\n    //     store.systemState.directScore = {\r\n    //         owner, name: dispnam\r\n    //     };\r\n    //     dispatcher.system.setState(store.systemState);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // DataUtil.findScore(conteseq).then(resList => {\r\n        //     if (resList.length > 0) {\r\n        //         const source = resList[0]['data'];\r\n        //         const owner = resList[0]['owner'];\r\n        //         const dispnam = resList[0]['dispnam'];\r\n        //         const text = DataUtil.unZip(source);\r\n        //         setScoreData(owner, dispnam, JSON.parse(text));\r\n        //     }\r\n        // });\r\n    }, []);\r\n    // if (store.systemState.directScore == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{0} arts have been published.</_MessageRecord>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${HOME_USER_DIV_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    // const authButtonJsx = loginProps == undefined ? (\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.systemState.dialog = <LoginFrame />;\r\n    //         dispatcher.system.setState(store.systemState);\r\n    //         console.log(window.location.origin);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Login / Sign up\r\n    //     </_LoginButton>\r\n    // ) : (<>\r\n    //     <_UserName\r\n    //         isEntry={store.userEnv.login != null}\r\n    //         onClick={() => {\r\n    //             dispatcher.system.setDialog(<AccountFrame />);\r\n    //         }}\r\n    //     >{userId}</_UserName>\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.userEnv.login = null;\r\n    //         dispatcher.system.setUserEnv(store.userEnv);\r\n\r\n    //         dispatcher.system.setDialog(<ConfirmDialog.Component\r\n    //             message={'Logout.\\nSee you next time!'}\r\n    //         />);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Logout\r\n    //     </_LoginButton>\r\n    // </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {/* {authButtonJsx} */}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <>\r\n                {!store.system.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={() => {\r\n                            setStore({...store, system: {\r\n                                ...store.system, isSplash: false\r\n                            }});\r\n                        }}\r\n                    />}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}